{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x5cff853b0891a893bb628605983b6c7f56557351944bd125a6a7318da2a7936f",
    "deployTransaction": {
      "hash": "0x5cff853b0891a893bb628605983b6c7f56557351944bd125a6a7318da2a7936f",
      "type": 2,
      "accessList": [],
      "blockHash": "0x5bd0a57678a6bba0b0713d03d47d297ec4eb7ad9e057617a5446de0571501466",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x6a841213"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x996d5a26"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xea4aff56b4ecfa460f4a19fd7a2c1f4d4b1bced0fc6bb6cba43ecbef91c30696",
      "s": "0x3f1a3763a600e0dfc7a2adcf58eff2660ca5069fe13838be449fe6237a06c181",
      "v": 1,
      "creates": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xdf5f050d0aba361af7d30a413e3b65953d878a901134e04cacd0a9b12b831fe7",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xbc25e992cde3c6c07a37aa2c6ebbd9de22e79ae838ecd57a43072895d4e39443",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xaa0e5d25f7b12dd53587b58236a73a7bce66fa4028654b07a9e33828944e5d22",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x63116f2c9ddb6a46801e35512f3ffc758a70876623a631a2da8a766f193a47f1",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0x5d79da130785b3312f65cbe9bfc74b1bc50bfb3ed79fdbda535d9e1d1101b91d",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x333e2bf756ebc5de56812dbb5ed7adeb59a7bc92b3eece6ce786e66d4eea9da3",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x94f92259f8f438ea2b9c8bcd380932309eabd45f0793ab29835cd1fd6ee055e0",
      "kind": "transparent"
    },
    {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0xbd924c9adcfcaaeb4170836bca7c71ba0c75155a6ff41fe657cbda57e1756fa0",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0xc69710b49e116aec09514ace9300a04e62b1d3a8d595a39989fa2bf69188aca3",
      "kind": "transparent"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0x94cfd23196203a7e1e823c0f2762c93cfb2320ef40a4462072651b80b0910030",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0x1406d5c1f8ea077112af6f4de1ccdb074f5ddb6390c49d10a0ae847f7d448347",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0x62550e77fea3f159aceaeb60067dd359b561239092861639965b71f18b3d94e0",
      "kind": "transparent"
    },
    {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0x44b113443dd7d9e577078889740670530aa81bf8b6b24d79510864ff2af989ab",
      "kind": "transparent"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0x1cc3c010955bdba059cd1a0a10c5bfb1be843b98c40d86a28529a43bb08eca83",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xa1e5d35a91ad095a986faf7cc87cbff7086fb8d93cb6dc762f4f4dba93070a0c",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xd2363b28172137b8df42358b5af7fb0e5a0640c8d4477626248cbbb7ffccdc1e",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xb8829ffa3f453766fbfa6e5144b50c05addfc52ed9ee4cff6206e5e0c3b7217f",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xed4d2ca53fe5e46e755fb6fb3f499d089e4ba846426f1a5324417a9ba57b389c",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xec18223e7ef3ad50eacaf50603dd6a535321700702a6829de24aa0992852e566",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xfb8d9dc97cb930b92c42b576a697522391b94e0110368956a88c72e0a292fba0",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x75789378bf6936cbb83818d176785d2f583717317eddb5a87e000f2ed95818a2",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x655402620605a61df1d655a896a1d2f1d43d766d7732ab7907a2a48f418171bd",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0x1e0338f6169e8d4972c0f0e6ef8dd95a5fd23601b12ef3e8977d398a6f9da391",
      "kind": "transparent"
    },
    {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0xedebbbecf496fc2e1a72148b875f69196193be895d5b3620a142f8707b846881",
      "kind": "transparent"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0xc359b2c003cfba8b2be6743ca49653d0075973c41c3c1537657db9ea38892365",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0x24c6e0aba72a2032c2a76a477a5a8b43cd045efdba691ac646efc51a352808bd",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x82eb388d91a249756541e77765903b4566abb7778b60408d7b450701950bc875",
      "kind": "transparent"
    },
    {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0x52b28b04c6045a42bd30059029a6f86f3016226c413cd06e692784039f93e367",
      "kind": "transparent"
    },
    {
      "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "txHash": "0x1eaf04c037fa0dcd11c1021b6ac2421e0a25c35e6349f360ed1efe4b6d437c8e",
      "kind": "transparent"
    },
    {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0x0be35d55f572636b2c582011f1e5c23983286dd058c543b81e8ad5dec0f0ff67",
      "kind": "transparent"
    }
  ],
  "impls": {
    "85530efd3d195378e9ef76a56e2799d0bdd27d3f2de3ac5c1305df0eb63508a1": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x8743f0e7b2a687e45305566a94e7dd299439d9ad23b4be3f640fbeca62e37a92",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesRecipient",
            "type": "t_address",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:11"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesValue",
            "type": "t_uint256",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:12"
          },
          {
            "contract": "DankMinter",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)1799_storage",
            "src": "contracts/DankMinter.sol:16"
          },
          {
            "contract": "DankMinter",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "contracts/DankMinter.sol:19"
          },
          {
            "contract": "DankMinter",
            "label": "votingCooldownTime",
            "type": "t_uint256",
            "src": "contracts/DankMinter.sol:20"
          },
          {
            "contract": "DankMinter",
            "label": "memeToHash",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/DankMinter.sol:29"
          },
          {
            "contract": "DankMinter",
            "label": "hashToMeme",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/DankMinter.sol:31"
          },
          {
            "contract": "DankMinter",
            "label": "memeToImgHash",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/DankMinter.sol:33"
          },
          {
            "contract": "DankMinter",
            "label": "imgHashToMeme",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/DankMinter.sol:35"
          },
          {
            "contract": "DankMinter",
            "label": "userCooldown",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankMinter.sol:37"
          },
          {
            "contract": "DankMinter",
            "label": "votingCooldown",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankMinter.sol:39"
          },
          {
            "contract": "DankMinter",
            "label": "memeScore",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/DankMinter.sol:41"
          },
          {
            "contract": "DankMinter",
            "label": "stashedMemes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankMinter.sol:43"
          },
          {
            "contract": "DankMinter",
            "label": "memeStash",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/DankMinter.sol:45"
          },
          {
            "contract": "DankMinter",
            "label": "memePostings",
            "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
            "src": "contracts/DankMinter.sol:47"
          }
        ],
        "types": {
          "t_struct(Counter)1799_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(uint256 => string[])"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "b6cea4a6d9207644670a99b08f8de2056bda71859d4eb2e3faa8e2f7e23a9d38": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xcb03fc06a9e50ad5d3090ab4ac9eb870b9d5564aad80ff40107d3efa3a64002a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesRecipient",
            "type": "t_address",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:11"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesValue",
            "type": "t_uint256",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:12"
          },
          {
            "contract": "DankMinterV2",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)1799_storage",
            "src": "contracts/DankMinterV2.sol:16"
          },
          {
            "contract": "DankMinterV2",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "contracts/DankMinterV2.sol:19"
          },
          {
            "contract": "DankMinterV2",
            "label": "votingCooldownTime",
            "type": "t_uint256",
            "src": "contracts/DankMinterV2.sol:20"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeToHash",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/DankMinterV2.sol:29"
          },
          {
            "contract": "DankMinterV2",
            "label": "hashToMeme",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/DankMinterV2.sol:31"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeToImgHash",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/DankMinterV2.sol:33"
          },
          {
            "contract": "DankMinterV2",
            "label": "imgHashToMeme",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/DankMinterV2.sol:35"
          },
          {
            "contract": "DankMinterV2",
            "label": "userCooldown",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankMinterV2.sol:37"
          },
          {
            "contract": "DankMinterV2",
            "label": "votingCooldown",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankMinterV2.sol:39"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeScore",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/DankMinterV2.sol:41"
          },
          {
            "contract": "DankMinterV2",
            "label": "stashedMemes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankMinterV2.sol:43"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeStash",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/DankMinterV2.sol:45"
          },
          {
            "contract": "DankMinterV2",
            "label": "memePostings",
            "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
            "src": "contracts/DankMinterV2.sol:47"
          },
          {
            "contract": "DankMinterV2",
            "label": "testUpgradability",
            "type": "t_uint256",
            "src": "contracts/DankMinterV2.sol:49"
          }
        ],
        "types": {
          "t_struct(Counter)1799_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(uint256 => string[])"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
