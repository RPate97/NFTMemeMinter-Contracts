{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x671fac95830b7c255cc622ed28609d4f493efe2e718d4801e25cdf5fd78c183a",
    "deployTransaction": {
      "hash": "0x671fac95830b7c255cc622ed28609d4f493efe2e718d4801e25cdf5fd78c183a",
      "type": 2,
      "accessList": [],
      "blockHash": "0xdeff831b343af63f035d49b4a839c691dd844459ccfd63ab5d3b4e7373ada7b3",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x6aa83280"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x99b59b00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x396aa4853a2ff4ffd6dc1bc46d75b5e0549ee2bea363059b5e4570cce9e8188c",
      "s": "0x16863063dd274031f551faddcc2377204d7cbf12b210565738d0b96e6cae4ca7",
      "v": 1,
      "creates": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x4C4a2f8c81640e47606d3fd77B353E87Ba015584",
      "txHash": "0x4dbf555c028be16252ac6daac092e87a80bcd3bb2e08428566fdb90064583013",
      "kind": "transparent"
    },
    {
      "address": "0xDC11f7E700A4c898AE5CAddB1082cFfa76512aDD",
      "txHash": "0x779ecf5a88df93f23f6c9103cc2cca3f144e1eeeaa7d59bd3993f72113c82eef",
      "kind": "transparent"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0xc268643df5d6b55fd3f902bb3ba70a24566b1c8a6a01103dddb7b6a20c5f9e6a",
      "kind": "transparent"
    },
    {
      "address": "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6",
      "txHash": "0xab9598f5cfe2ca78ab9f405231ba418dca4ea319d941e72d66ad9678a52a5d8d",
      "kind": "transparent"
    },
    {
      "address": "0x51A1ceB83B83F1985a81C295d1fF28Afef186E02",
      "txHash": "0xc0315c1e60bf58fe6ff8206fdd4de047a27e7913cbe7f10cc4a87dd787c5a9ca",
      "kind": "transparent"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0x47beb298ccc6b49cb812b700eeaae900e892270de606070a689ad86915dca53c",
      "kind": "transparent"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x0cc151f51dcd43d70feabf61663fa50e38b31ed6816c7533b760c8008bd8708a",
      "kind": "transparent"
    },
    {
      "address": "0x21dF544947ba3E8b3c32561399E88B52Dc8b2823",
      "txHash": "0x5cba154866535c4627a06afdf426198b468242812a5cb5a82df8d5511611eecf",
      "kind": "transparent"
    },
    {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0x482fdb90e75ca85065c357ea53ce6a666f2e35e2ee860a72c4c6b5f1db810a4b",
      "kind": "transparent"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0xc1474a43b9cd0942c8eb7a502e7a449dec70b56d00ca2c92ba671db57283757f",
      "kind": "transparent"
    },
    {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0xc191d6501a15f4b2be6e8c828060f6b982190e354f121e7569c657abdfcec696",
      "kind": "transparent"
    },
    {
      "address": "0xD8a5a9b31c3C0232E196d518E89Fd8bF83AcAd43",
      "txHash": "0xdbb93c9c3f8c18adb9defc27c8ae6ad7ec839e11bad784f84d11f083d0719ca8",
      "kind": "transparent"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0xea4fe4ea37f15e62dee384a208fdc7e1e9fac68c6d1c715e44f654e246aac4f1",
      "kind": "transparent"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0x1034adbd47ec4b4d88aeb1cd39c9b48b737c1324a2c15d41316c5a6cf56a798b",
      "kind": "transparent"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0x56039ed5a2fdc740ecfe2b8c1ab26b4b3988049ceaed7b8752d4f9e9c2dc81e9",
      "kind": "transparent"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x5c77b73c2422bbb97dc40ddd4d17a94b42891ef699b34523127a3a78b2041e85",
      "kind": "transparent"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0xc0323cbe3e8b789f02c6fc8fc97b2df3f5d31718e126ccc4b6a8b6d8c4ed9c46",
      "kind": "transparent"
    },
    {
      "address": "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
      "txHash": "0x00b337d504a5df5de778b77d331ac60274ecd8a29738420eeb4f06d353979f99",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x7f6bf5d7c5f910b630c73ab3664ea565108df9dbc90b617a4c55d75434352972",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x9f0057942baa80357d18478a9fa0ba0ef68ace0a9504bcfa20b6dd9b2b3e4f2f",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x6cd5f8aaa00e03c6dabe11b69cf59f4f764407fe3d8ec3d5e1e41fab93246c75",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0x3c4517b150ddb827384422cb3e21ac74cc3cec5ea1e557366e827f06bbe62ab0",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0xef9b6b19b45a7a17812a0e0427d407bddc0c685452629a7dfe6fa26e310fefad",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0x4fa669abf2c90070342a3f510e50bb34b1e0251ed010ef19b638e40a0d012dd9",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0xd3ad5db74f94c6a7c8c870b60092f1d19de2755ae43d4e9f59d53bcf8166cd63",
      "kind": "transparent"
    },
    {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0xfdc6b0adeb293173f38437981051dc2db54e06c6603d67c69fed7e75933b239c",
      "kind": "transparent"
    },
    {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x8bd348de3e136769db353cb68d22014a0b2a8ba0d094c60759827a476df980b3",
      "kind": "transparent"
    },
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0x75b4acc2ca19bc0bb725e2469f59d3c70219d8acdb764c36c3c3f5ca67a791a8",
      "kind": "transparent"
    },
    {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0x44b517ef08102dc329e389fc3f5af008f1f0cdd45633cbc2b8faad210aa4e5ba",
      "kind": "transparent"
    },
    {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0xae29bf6d5850a2ce2f6ee9ff9722e17de764c8b8ac6e17cd39d71ef7a7f2297f",
      "kind": "transparent"
    },
    {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xf8725d54b94f5c436f41f7026813406b2beb1f603a708687dc7a0ce24c1d0092",
      "kind": "transparent"
    },
    {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0x28ee98823fc126b732eaebc9dc789c58b559e59e695d771ee702e46c3a6d524f",
      "kind": "transparent"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0x64a2e45c7bf952e0f1f9ab6a12466c1f7b94dffbb635b01d99d21596305c6abc",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x06a92a99c8e0493da2bb38409f2b11a21a491708deb6e2119f83f0b77e366ecb",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0xce6106b4b692ac8865b0ee08b79ee6d229612771a51f03e7d7a489be3e9bfbc9",
      "kind": "transparent"
    },
    {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0xcb0d4717b94de02ef801252a4480770aecb7e3e3da40db72b3eda3def0032c45",
      "kind": "transparent"
    },
    {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0x7683fbf297b8e2091f1b001f18390e42366cb42ffce048e60d44870521a10304",
      "kind": "transparent"
    },
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0x8586d150e577623cf8cba82aa9a4910d000b0df6f13063adb3a677f5e7a05c34",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x8cce403dc15f89800e9e5b63572e8f576c4de61b0fe602d2a87a453c725db1f5",
      "kind": "transparent"
    },
    {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0x86494b4eed866e520d4ba024b51e3d3871e2895e6f29b57a9dc3a188418efaf4",
      "kind": "transparent"
    },
    {
      "address": "0x809d550fca64d94Bd9F66E60752A544199cfAC3D",
      "txHash": "0x7f6defbd2289fa013ab096b585a3c368a88206120956cd5c955336874d8e0285",
      "kind": "transparent"
    },
    {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0x01a18b72c3ff36772b676589c0d01d1b9bb2741450e202f2a1c74d9c891cea95",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x2358ccc4fe3bee37ce507c27167337b2be2d45de52ba1b8debba308c934e0075",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xf410c13adac48527d83a45929ebbabb97652c0ba57e5a09d552bdae76f2805d6",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xbd1f47a262f9e2b559ca6c7ecda3b7ac38180ad14f6d9c6096ce6a6d4772f5ed",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x880e85b69780686730f065bd52797240e5664d1dbc9dd933239520cf84ffb9ea",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0xf2c7475b456198b07d6c015b2362857d6cf5b3a126267b44c7cbfafba89a9963",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0xbb8a9a1f719aa24720d757642553a63228df828c510212e1177648fbd02b9a9c",
      "kind": "transparent"
    },
    {
      "address": "0x67d269191c92Caf3cD7723F116c85e6E9bf55933",
      "txHash": "0xb42fa3cf5e35f76cc3feaa4369398017aad4d70f4c6666b3f1685618cb1726ef",
      "kind": "transparent"
    },
    {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0x05fa771c89eb873e042ccbbe076bfe4dfc0f6cec9759bb81c143685c7189768c",
      "kind": "transparent"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xf7954a9959ca2d4b27643c5d7ee5722038ee7a2211016ce2f61ee98851af0028",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0xb020053bc870488c8ff17337a480c553198b68fb531b659a23ee8b62b94f9b6e",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0x3844b8bccf1cf6459f2cf304c5994991746ff809e30c166591a89f953889eaed",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0x830f8c7081942c3de7df32ae1dd206e7dd697c10df615b36ce0caf7bb933f698",
      "kind": "transparent"
    },
    {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0x1ebcaf24862b96b22cd4ff19525f5d6e307a6c802626b04aca067ca7316453d9",
      "kind": "transparent"
    },
    {
      "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "txHash": "0xc0f8a99808a4503886f847369458049d257f3ee2bacdb6fb0b8ce344760f037b",
      "kind": "transparent"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0x73452718dfb67022577c3803c50b02c960243d0758e948664aa3fae3238d443b",
      "kind": "transparent"
    },
    {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0xf23e7777cbe7a53f8881825ccecb6a3a9793ba210acdfc84863e773eac1bcdca",
      "kind": "transparent"
    },
    {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0x82db6c1633cd5a8feb87810492f72219a0fd8b9af154f0a388f26c1d6bfdc150",
      "kind": "transparent"
    },
    {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0xeb2bd4210e5a2e5e58b88b3d5b2e898985fd591df43a98b0c92231bd1bfc19cc",
      "kind": "transparent"
    },
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0x29132ca4e978c7367cb30aae50531b8cbadc34359211142ed53ff94dcf218df9",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xe86fef08aef1452ae5c78ce3fee8838bbd9a961dd84135f6d7b47fc53b95fc04",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x8a212f3af0fb96fc29f1d92a50abe2a35a62b41fa13387e0f4becc16ad98cf19",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x09881a36adab723aae1d447a14636c6df419da9ae9a1d8f31916973b5c8b1a04",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x5d3890dfadacf3f62a1864c000ac88e990b3b81280c175919a28d3417b79fbc9",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xc3824d0873ff4e767ee18ff88212b2f58c2dc6993cf7057e6afac3339f855a1e",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x1279290cabdc0649996d8d53bd20b15d0c325136a95b273051b43a10ab5a043c",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x7e0bf44ec04ea1b7a4b91f387fd81ad7fb45c206f4c62037eb1dd79aa6fe1dee",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xe70d8b86ad1947cafbb4f8fb68b7e33aac62ce1e2f81cce4cfdb7246d5e6f670",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xf21f07a353b154f59aa045cfb87145b7fa6aa5fafff1faef2b580e16718d25b5",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x26d43455e3cc4a3b6c33f3d20b4cda531800237277a18d753130556adf5fcdd9",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x93e1b0e741a8f723f22a23bb572a3787d599c6f381e604447c4979d158d38a8d",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x04a822b364e3635491f9712f6a302d3b67e6c9c94263b92a273e356759670975",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3d97eaa84f5f92a2bd7c00f161da6d2d4532b215412f4f0b7038e9f285cc3e92": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xa542e5d0bfb30005744b471c24085ea68576cd7c7e2d866e9a2a62d8da4841cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesRecipient",
            "type": "t_address",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:11"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesValue",
            "type": "t_uint256",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:12"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3663_storage)dyn_storage)",
            "src": "contracts/@rarible/royalties/contracts/impl/AbstractRoyalties.sol:5"
          },
          {
            "contract": "DankMinterV2",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2959_storage",
            "src": "contracts/DankMinterV2.sol:22"
          },
          {
            "contract": "DankMinterV2",
            "label": "tipAddress",
            "type": "t_address",
            "src": "contracts/DankMinterV2.sol:25"
          },
          {
            "contract": "DankMinterV2",
            "label": "treeFiddyCoinAddress",
            "type": "t_address",
            "src": "contracts/DankMinterV2.sol:26"
          },
          {
            "contract": "DankMinterV2",
            "label": "conversionRate",
            "type": "t_uint256",
            "src": "contracts/DankMinterV2.sol:27"
          },
          {
            "contract": "DankMinterV2",
            "label": "tf",
            "type": "t_contract(TreeFiddy)7125",
            "src": "contracts/DankMinterV2.sol:28"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeToHash",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/DankMinterV2.sol:44"
          },
          {
            "contract": "DankMinterV2",
            "label": "hashToMeme",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/DankMinterV2.sol:46"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/DankMinterV2.sol:53"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeScore",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/DankMinterV2.sol:55"
          },
          {
            "contract": "DankMinterV2",
            "label": "hasMinted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DankMinterV2.sol:58"
          },
          {
            "contract": "DankMinterV2",
            "label": "hasVotedOnMeme",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/DankMinterV2.sol:60"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeExperience",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/DankMinterV2.sol:63"
          },
          {
            "contract": "DankMinterV2",
            "label": "requiredMemeExperience",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/DankMinterV2.sol:65"
          },
          {
            "contract": "DankMinterV2",
            "label": "memeDanknessTier",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/DankMinterV2.sol:67"
          },
          {
            "contract": "DankMinterV2",
            "label": "upgradability",
            "type": "t_uint256",
            "src": "contracts/DankMinterV2.sol:69"
          }
        ],
        "types": {
          "t_struct(Counter)2959_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(TreeFiddy)7125": {
            "label": "contract TreeFiddy"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3663_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)3663_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)3663_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "edfeb00ed1dc45ae6e369f0c0a35a90a3eeb6a7ba49ecacebd4a89f807fb21b8": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x8bf0cac46c4e337830595ab3113ea3ed923ef10c54d71d3a26a4bdd066d300e2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesRecipient",
            "type": "t_address",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:11"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesValue",
            "type": "t_uint256",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:12"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3792_storage)dyn_storage)",
            "src": "contracts/@rarible/royalties/contracts/impl/AbstractRoyalties.sol:5"
          },
          {
            "contract": "DankMeme",
            "label": "imx",
            "type": "t_address",
            "src": "contracts/DankMeme.sol:26"
          },
          {
            "contract": "DankMeme",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/DankMeme.sol:27"
          },
          {
            "contract": "DankMeme",
            "label": "memeToHash",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/DankMeme.sol:30"
          },
          {
            "contract": "DankMeme",
            "label": "hashToMeme",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/DankMeme.sol:32"
          },
          {
            "contract": "DankMeme",
            "label": "memeCreator",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/DankMeme.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3792_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)3792_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)3792_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "3b44a5b9a5aa620f818e8d3402474c4eb1b719c8db6b9fc12f2386300ef09305": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x43c6492260e64a341c47356f2e699026b0e3d532100e0b935ec49ddc7afd687a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesRecipient",
            "type": "t_address",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:11"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royaltiesValue",
            "type": "t_uint256",
            "src": "contracts/ERC2981ContractWideRoyalties.sol:12"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3792_storage)dyn_storage)",
            "src": "contracts/@rarible/royalties/contracts/impl/AbstractRoyalties.sol:5"
          },
          {
            "contract": "DankMemeV2",
            "label": "imx",
            "type": "t_address",
            "src": "contracts/DankMemeV2.sol:26"
          },
          {
            "contract": "DankMemeV2",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/DankMemeV2.sol:27"
          },
          {
            "contract": "DankMemeV2",
            "label": "memeToHash",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/DankMemeV2.sol:30"
          },
          {
            "contract": "DankMemeV2",
            "label": "hashToMeme",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/DankMemeV2.sol:32"
          },
          {
            "contract": "DankMemeV2",
            "label": "memeCreator",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/DankMemeV2.sol:34"
          },
          {
            "contract": "DankMemeV2",
            "label": "testUpgrade",
            "type": "t_uint256",
            "src": "contracts/DankMemeV2.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3792_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)3792_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)3792_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
